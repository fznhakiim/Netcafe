/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package NCafeManagement;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.util.Date;

/**
 *
 * @author Arya Prathama
 */
public class PaymentGUI extends javax.swing.JFrame {
    TransactionHistory transaction = new TransactionHistory();


    /**
     * Creates new form PaymentGUI
     */
    public PaymentGUI() {
        initComponents();
        setTitle("Payment");
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        BackButton = new javax.swing.JButton();
        QRISbutton = new javax.swing.JButton();
        CashButton = new javax.swing.JButton();
        paymentHistory = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelHistory = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel3.setBackground(new java.awt.Color(255, 153, 0));

        BackButton.setText("Back");
        BackButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BackButtonMouseClicked(evt);
            }
        });

        QRISbutton.setText("QRIS");
        QRISbutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                QRISbuttonMouseClicked(evt);
            }
        });

        CashButton.setText("Cash on Merchant");
        CashButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CashButtonMouseClicked(evt);
            }
        });

        paymentHistory.setText("Payment History");
        paymentHistory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                paymentHistoryMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(CashButton, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(QRISbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(paymentHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QRISbutton)
                    .addComponent(CashButton)
                    .addComponent(BackButton)
                    .addComponent(paymentHistory))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        TabelHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID Payment", "Customer Name", "Total", "Type"
            }
        ));
        jScrollPane1.setViewportView(TabelHistory);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private long paidDuration = 0;

    private void BackButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BackButtonMouseClicked
        PCManagerGUI pcManagerGUI = new PCManagerGUI();
        pcManagerGUI.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BackButtonMouseClicked

    private void paymentHistoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paymentHistoryMouseClicked
        try {
            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/warned_db", "root", "");
            Statement statement = connection.createStatement();

            ResultSet resultSet = statement.executeQuery("SELECT * FROM tb_pembayaran");

            DefaultTableModel model = (DefaultTableModel) TabelHistory.getModel();
            model.setRowCount(0);
            while (resultSet.next()) {
                String kodePembayaran = resultSet.getString("id_pembayaran");
                String namaPelanggan= resultSet.getString("nama_pelanggan");
                String hargaPembayaran = resultSet.getString("harga_pembayaran") + ("0");
                String typePemabayaran= resultSet.getString("type_pembayaran");

                model.addRow(new Object[]{kodePembayaran,namaPelanggan,hargaPembayaran,typePemabayaran});
            }

            resultSet.close();
            statement.close();
            connection.close();
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Failed to connect to database.");
        }//GEN-LAST:event_paymentHistoryMouseClicked
    }

    private void QRISbuttonMouseClicked(java.awt.event.MouseEvent evt) {
        String namaPelanggan = JOptionPane.showInputDialog(this, "Enter Customer Name");
        double amount = Double.parseDouble(JOptionPane.showInputDialog(null, "Enter the amount"));

        try {
            
            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/warned_db", "root", "");

         
            PreparedStatement addTransactionStatement = connection.prepareStatement("INSERT INTO tb_pembayaran (nama_pelanggan, harga_pembayaran, type_pembayaran) VALUES (?, ?, ?)");
            addTransactionStatement.setString(1, namaPelanggan);
            addTransactionStatement.setDouble(2, amount);
            addTransactionStatement.setString(3, "QRIS");

    
            int rowsAffected = addTransactionStatement.executeUpdate();
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(null, "Dummy QRIS payment processed for amount: Rp." + amount);
                QRIS qris = new QRIS();
                qris.setVisible(true);
                this.setVisible(false);
            } else {
                JOptionPane.showMessageDialog(null, "Failed to process QRIS payment.", "Error", JOptionPane.ERROR_MESSAGE);
            }

    
            connection.close();
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Failed to connect to database.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }


    private void CashButtonMouseClicked(java.awt.event.MouseEvent evt) {
        String namaPelanggan = JOptionPane.showInputDialog(this, "Enter Customer Name");
        double amount = Double.parseDouble(JOptionPane.showInputDialog(null, "Enter the amount"));

        try {

            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/warned_db", "root", "");


            PreparedStatement addTransactionStatement = connection.prepareStatement("INSERT INTO tb_pembayaran (nama_pelanggan, harga_pembayaran, type_pembayaran) VALUES (?, ?, ?)");
            addTransactionStatement.setString(1, namaPelanggan);
            addTransactionStatement.setDouble(2, amount);
            addTransactionStatement.setString(3, "CASH");


            int rowsAffected = addTransactionStatement.executeUpdate();
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(null, "Succes");
            }

            connection.close();
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Failed to connect to database.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
                                       

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PaymentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PaymentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PaymentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PaymentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PaymentGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JButton CashButton;
    private javax.swing.JButton QRISbutton;
    private javax.swing.JTable TabelHistory;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton paymentHistory;
    // End of variables declaration//GEN-END:variables
}
